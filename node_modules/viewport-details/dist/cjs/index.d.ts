export interface ViewportDetails {
    /**
     * The width of the viewport
     */
    width: number;
    /**
     * The height of the viewport
     */
    height: number;
    /**
     * The hight of the viewport if the browser controlls have collapsed (e.g. in iOS Safari)
     */
    heightCollapsedControls: number;
    /**
     * The scroll x position of the viewport
     */
    scrollX: number;
    /**
     * The scroll y position of the viewport
     */
    scrollY: number;
    /**
     * Whether the viewport has resized since the last time getViewportDetails was called
     */
    resized: boolean;
    /**
     * Whether the viewport scrolled since the last time getViewportDetails was called
     */
    scrolled: boolean;
    /**
     * The direction in which the user is scrolling on the x axis. (This will not update until getViewportDetails has been called once)
     */
    scrollDirectionX: ScrollDirectionX;
    /**
     * The direction in which the user is scrolling on the y axis. (This will not update until getViewportDetails has been called once)
     */
    scrollDirectionY: ScrollDirectionY;
    /**
     * The previous getViewportDetails result
     */
    previous?: ViewportDetails;
    /**
     * Whether any of the values have changes since the last time getViewport details was called
     */
    changed?: boolean;
}
export declare enum ScrollDirectionX {
    Left = -1,
    None = 0,
    Right = 1
}
export declare enum ScrollDirectionY {
    Up = -1,
    None = 0,
    Down = 1
}
/**
 * Gets the current state of the viewport
 * @returns ViewportDetails
 */
export declare function getViewportDetails(): ViewportDetails;
